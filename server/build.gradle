buildscript {
    dependencies {
        classpath "org.akhikhl.gretty:gretty:1.2.4"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

configurations.all {
    resolutionStrategy {
        force 'com.fasterxml.jackson.core:jackson-core:2.7.5'
    }
}

apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"

dependencies {
    //Conductor
    compile project(':conductor-core')
    compile project(':conductor-jersey')
    compile project(':conductor-redis-persistence')
    compile project(':conductor-mysql-persistence')
    compile project(':conductor-cassandra-persistence')
    compile project(':conductor-contribs')
    compile project(':conductor-es5-persistence')
    compile project(':conductor-grpc-server')

    compile "com.netflix.runtime:health-guice:${revHealth}"

    //Jetty
    compile "org.eclipse.jetty:jetty-server:${revJetteyServer}"
    compile "org.eclipse.jetty:jetty-servlet:${revJettyServlet}"

    //Guice
    compile "com.sun.jersey.contribs:jersey-guice:${revJerseyGuice}"
    compile "com.google.inject:guice:${revGuice}"
    compile "com.google.inject.extensions:guice-servlet:${revGuiceServlet}"

    //Swagger
    compile "io.swagger:swagger-jersey-jaxrs:${revSwagger}"
    repositories {
        maven {
            url "https://artifactory.corp.adobe.com:443/artifactory/maven-asr-release-local"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    compile(group: 'com.adobe.asr', name: 'asr-starter-jersey-ims', version: '6.12.0') {
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'log4j'
        exclude group: 'org.slf4j'

    }
    compile(group: 'com.adobe.asr', name: 'asr-imsutils', version: '6.5.0') {
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'log4j'
        exclude group: 'org.slf4j'

    }
    compile(group: 'com.adobe.asr', name: 'connector-ims', version: '6.12.0') {
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'log4j'
        exclude group: 'org.slf4j'

    }
    compile(group: 'com.adobe.asr', name: 'asr-autoconfigure', version: '6.12.0') {
        exclude group: 'org.apache.logging.log4j'
        exclude group: 'log4j'
        exclude group: 'org.slf4j'

    }
}
// configurations {
//     //compile.exclude group: 'com.adobe.asr'
//     compile.exclude module: 'log4j-over-slf4j'
// }

shadowJar {
    mergeServiceFiles()
    configurations = [project.configurations.compile]
    manifest {
        attributes 'Description': 'Self contained Conductor server jar'
        attributes 'Main-Class': 'com.netflix.conductor.bootstrap.Main'
    }
}
publishing {
    publications {
        nebula(MavenPublication) {
            artifact shadowJar
        }
    }
}

gretty {
    contextPath = '/'
    servletContainer = 'tomcat8'
    scanDirs = ['**/src/main/resources/**']
    scanDependencies = true
    port = 8080
    // More properties can be found here:
    // http://akhikhl.github.io/gretty-doc/Gretty-configuration.html
}
configurations.grettyRunnerTomcat8 {
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}


build.dependsOn('shadowJar')

task server(type: JavaExec) {
    systemProperty 'workflow.elasticsearch.url', 'localhost:9300'
    // Switch between Elasticsearch versions 2 & 5 with major version number.
    systemProperty 'loadSample', 'true'
    systemProperties System.properties
    main = 'com.netflix.conductor.bootstrap.Main'
    classpath = sourceSets.test.runtimeClasspath
}
